version: "3"

services:
  web:
    image: amirmasoud/services:latest
    restart: always
    volumes:
      - .env:/var/www/.env
    ports:
      - "80:80"
    depends_on:
      - database
      - redis
    entrypoint: /var/www/build/entrypoint.sh
  redis:
    image: redis:7.0-alpine3.15
    restart: always
  database:
    image: mariadb:10.8
    environment:
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=database
      - MARIADB_USER=user
      - MARIADB_PASSWORD=password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "user", "-ppassword"]
      interval: 2s
      retries: 15
  # traefik:
  #   image: traefik
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./build/traefik/traefik.yml:/etc/traefik/traefik.yml
  #   networks:
  #     - proxy
  # app:
  #   image: amirmasoud32/services:1.0.13
  #   restart: unless-stopped
  #   depends_on:
  #     - traefik
  #     - database
  #   networks:
  #     - internal
  #     - proxy
  # web:
  #   image: "nginx:1.22-alpine"
  #   depends_on:
  #     - app
  #   volumes:
  #     - ./build/web/conf.d:/etc/nginx/conf.d
  #     - ./build/web/logs:/var/log/nginx
  #     - .:/var/www/html
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.web.entrypoints=http"
  #     - "traefik.http.routers.web.rule=Host(`${DOMAIN}`, `www.${DOMAIN}`)"
  #     - "traefik.http.middlewares.web-https-redirect.redirectscheme.scheme=https"
  #     - "traefik.http.routers.web.middlewares=web-https-redirect"
  #     - "traefik.http.routers.web-secure.entrypoints=https"
  #     - "traefik.http.routers.web-secure.rule=Host(`${DOMAIN}`, `www.${DOMAIN}`)"
  #     - "traefik.http.routers.web-secure.tls=true"
  #     - "traefik.http.routers.web-secure.tls.certresolver=http"
  #     - "traefik.http.routers.web-secure.service=web"
  #     - "traefik.http.services.web.loadbalancer.server.port=80"
  #     - "traefik.docker.network=proxy"
  #   networks:
  #     - proxy
  #     - internal
  # database:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: example
  # adminer:
  #   image: adminer
  #   restart: always
  #   depends_on:
  #     - database
  #   ports:
  #     - 8080:8080
